
@book{frankeComputerGraphicsComputer2012,
  title = {Computer {{Graphics}} \textemdash{} {{Computer Art}}},
  isbn = {978-3-642-70259-4},
  abstract = {Ten years have passed since the first edition of this book, a time sary to stress that the availability of colors further assists artistic span during which all activities connected with computers have ambitions. experienced an enormous upswing, due in particular to the ad The dynamics of display which can be achieved on the screen is vances in the field of semiconductor electronics which facilitated also of significance for the visual arts. It is a necessary condition microminiaturization. With the circuit elements becoming small for some technical applications, for example when simulating er and smaller, i. e. the transition to integrated circuits, the price dynamic processes. Although the graphics systems operating in real time were not designed for artistic purposes, they nonethe of hardware was reduced to an amazingly low level: this has de less open the most exciting aspects to the visual arts. While the finitely been an impulse of great importance to the expansion of computer technology, as well as to areas far removed from tech static computer picture was still a realization in line with the nology.},
  language = {en},
  publisher = {{Springer Science \& Business Media}},
  author = {Franke, Herbert W.},
  month = dec,
  year = {2012},
  keywords = {Computers / Computer Graphics,Computers / Software Development \& Engineering / General}
}

@misc{ohiostateuniversitySectionIndustryEvolves2007,
  title = {Section 3: {{The}} Industry Evolves},
  shorttitle = {Section 3},
  howpublished = {https://web.archive.org/web/20070405172607/http://accad.osu.edu:80/\textasciitilde{}waynec/history/lesson3.html},
  author = {Ohio State University},
  month = apr,
  year = {2007},
  file = {/home/jose/Zotero/storage/3ZQREYM9/lesson3.html}
}

@misc{ElmerpumpheatequationPng,
  title = {Elmer-Pump-Heatequation.Png},
  copyright = {Creative Commons Attribution-Share Alike 3.0 Unported},
  howpublished = {https://commons.wikimedia.org/wiki/File:Elmer-pump-heatequation.png},
  file = {/home/jose/Zotero/storage/7M79B2U9/614px-Elmer-pump-heatequation.html}
}

@misc{lobsterbakeEnglishLicensingCcbysa32009,
  title = {English: == {{Licensing}}: ={{Cc}}-by-Sa-3.0=},
  shorttitle = {English},
  author = {work:{\aftergroup\ignorespaces} Lobsterbake, Mesh\_overview jpg: The original uploader was Rchoetzlein at English Wikipediaderivative},
  year = {14 June 2009, 12:08 (UTC)},
  file = {/home/jose/Zotero/storage/HUS6JFYC/FileMesh_overview.html}
}

@article{kettnerUsingGenericProgramming1999,
  title = {Using {{Generic Programming}} for {{Designing}} a {{Data Structure}} for {{Polyhedral Surfaces}}},
  volume = {13},
  issn = {0925-7721},
  doi = {10.1016/S0925-7721(99)00007-3},
  number = {1},
  journal = {Comput. Geom. Theory Appl.},
  author = {Kettner, Lutz},
  month = may,
  year = {1999},
  keywords = {combinatorial data structure,generic programming,halfedge data structure,library design,polyhedral surface},
  pages = {65--90}
}

@article{campagnaDirectedEdgesScalable1998,
  title = {Directed {{Edges}}\textemdash{{A Scalable Representation}} for {{Triangle Meshes}}},
  volume = {3},
  issn = {1086-7651},
  doi = {10.1080/10867651.1998.10487494},
  number = {4},
  journal = {J. Graph. Tools},
  author = {Campagna, Swen and Kobbelt, Leif and Seidel, Hans-Peter},
  month = dec,
  year = {1998},
  pages = {1--11}
}

@misc{CGAL12Halfedge,
  title = {{{CGAL}} 4.12 - {{Halfedge Data Structures}}: {{User Manual}}},
  howpublished = {https://doc.cgal.org/latest/HalfedgeDS/index.html},
  file = {/home/jose/Zotero/storage/LXWBSNHW/index.html}
}

@misc{OpenGLOverview,
  title = {{{OpenGL Overview}}},
  howpublished = {https://www.opengl.org/about/},
  file = {/home/jose/Zotero/storage/3YU3US2Z/about.html}
}

@misc{KhronosReleasesVulkan2016,
  title = {Khronos {{Releases Vulkan}} 1.0 {{Specification}}},
  language = {en},
  howpublished = {https://www.khronos.org/news/press/khronos-releases-vulkan-1-0-specification},
  journal = {The Khronos Group},
  month = feb,
  year = {2016},
  file = {/home/jose/Zotero/storage/SB384RII/khronos-releases-vulkan-1-0-specification.html}
}

@misc{KhronosGroup2018,
  title = {The {{Khronos Group}}},
  abstract = {Deploying and developing royalty-free open standards for 3D graphics, Virtual and Augmented Reality, Parallel Computing, Neural Networks, and Vision Processing},
  language = {en},
  howpublished = {https://www.khronos.org/about},
  journal = {The Khronos Group},
  month = jun,
  year = {2018},
  file = {/home/jose/Zotero/storage/BNHC4MT9/about.html}
}

@misc{NVIDIANV1,
  title = {{{NVIDIA NV1}}},
  abstract = {NVIDIA NV1, 75 MHz, 1 Pixel Shaders, 0 Vertex Shaders, 1 TMUs, 1 ROPs, 2 MB EDO, 60 MHz, 64 bit},
  language = {en},
  howpublished = {https://www.techpowerup.com/gpudb/2015/nv1},
  journal = {TechPowerUp},
  file = {/home/jose/Zotero/storage/B8ATY5KL/nv1.html}
}

@misc{mirelaben-chenCS468GeometryProcessing,
  title = {{{CS468}}: {{Geometry Processing Algorithms}}},
  howpublished = {http://graphics.stanford.edu/courses/cs468-12-spring/\#info},
  author = {, Mirela Ben-Chen},
  file = {/home/jose/Zotero/storage/MEAA9D3J/cs468-12-spring.html},
  note = {Universidad de Stanford},
  annote = {Curso de la universidad de Stanford.

~}
}

@misc{VulkanSubgroupTutorial2018,
  title = {Vulkan {{Subgroup Tutorial}}},
  abstract = {Subgroups are an important new feature in Vulkan 1.1 because they enable highly-efficient sharing and manipulation of data between multiple tasks running in parallel on a GPU. In this tutorial, we will cover how to use the new subgroup functionality.},
  language = {en},
  howpublished = {https://www.khronos.org/blog/vulkan-subgroup-tutorial},
  journal = {The Khronos Group},
  month = mar,
  year = {2018},
  file = {/home/jose/Zotero/storage/5DTGM6ZS/vulkan-subgroup-tutorial.html}
}

@misc{IntroductionVulkanTutorial,
  title = {Introduction - {{Vulkan Tutorial}}},
  howpublished = {https://vulkan-tutorial.com/},
  file = {/home/jose/Zotero/storage/L7R2YMV3/vulkan-tutorial.com.html}
}

@misc{LunarXchange,
  title = {{{LunarXchange}}},
  howpublished = {https://vulkan.lunarg.com/doc/sdk/1.0.57.0/windows/tutorial/html/index.html},
  file = {/home/jose/Zotero/storage/2QDVSJ55/index.html}
}

@article{Vulkan80Specification,
  title = {{{Vulkan}}\textregistered{} 1.1.80 - {{A Specification}}},
  pages = {897},
  file = {/home/jose/Zotero/storage/S5UE5GMG/VulkanÂ® 1.1.80 - A Specification.pdf}
}

@misc{tristanlorachSiggraph2016Vulkan17:36:01UTC,
  type = {Ingenier\'ia},
  title = {Siggraph 2016 - {{Vulkan}} and Nvidia : The Essentials},
  shorttitle = {Siggraph 2016 - {{Vulkan}} and Nvidia},
  abstract = {This presentation introduces Vulkan components, what you must know to start},
  author = {Tristan Lorach},
  year = {17:36:01 UTC}
}

@misc{VulkanVsOpenGL2017a,
  title = {Vulkan vs {{OpenGL ES}} for a {{3D}} Satellite Navigation App on {{PowerVR}}},
  abstract = {The PowerVR architecture is quick to support the latest technologies. The Vulkan API is a case in point and PowerVR is capable of maximising its efficiency.},
  language = {en-GB},
  howpublished = {https://www.imgtec.com/blog/vulkan-3d-satnav-app-powervr/},
  journal = {Imagination Technologies},
  month = feb,
  year = {2017},
  file = {/home/jose/Zotero/storage/IL684E6Z/vulkan-3d-satnav-app-powervr.html}
}

@misc{GraphicsQt11,
  title = {Graphics | {{Qt}} 5.11},
  howpublished = {http://doc.qt.io/qt-5/topics-graphics.html},
  file = {/home/jose/Zotero/storage/8YCG5RWJ/topics-graphics.html}
}

@misc{CalculatingSurfaceNormal,
  title = {Calculating a {{Surface Normal}} - {{OpenGL Wiki}}},
  howpublished = {https://www.khronos.org/opengl/wiki/Calculating\_a\_Surface\_Normal},
  file = {/home/jose/Zotero/storage/EJ4M97CK/Calculating_a_Surface_Normal.html}
}

@misc{llcFaceVertexNormal,
  title = {Face and {{Vertex Normal Vectors}}},
  language = {en-us},
  howpublished = {https://docs.microsoft.com/en-us/previous-versions/windows/desktop/bb324491(v\%3dvs.85)},
  author = {LLC), Tara Meyer (Aquent},
  file = {/home/jose/Zotero/storage/FGHLQ4P9/bb324491(v=vs.html}
}

@misc{LearnOpenGLHelloTriangle,
  title = {{{LearnOpenGL}} - {{Hello Triangle}}},
  howpublished = {https://learnopengl.com/Getting-started/Hello-Triangle},
  file = {/home/jose/Zotero/storage/RIW2T9C2/Hello-Triangle.html}
}

@misc{GeometryShaderOpenGL,
  title = {Geometry {{Shader}} - {{OpenGL Wiki}}},
  howpublished = {https://www.khronos.org/opengl/wiki/Geometry\_Shader},
  file = {/home/jose/Zotero/storage/NP6EV5TL/Geometry_Shader.html}
}

@misc{HowLightingWorks,
  title = {How Lighting Works - {{OpenGL Wiki}}},
  howpublished = {https://www.khronos.org/opengl/wiki/How\_lighting\_works},
  file = {/home/jose/Zotero/storage/JR55A3ZT/How_lighting_works.html}
}

@book{sommervilleSoftwareEngineeringGlobal2016,
  title = {Software {{Engineering}}, {{Global Edition}}},
  isbn = {978-1-292-09614-8},
  abstract = {For courses in computer science and software engineering The Fundamental Practice of Software EngineeringSoftware Engineering introduces students to the overwhelmingly important subject of software programming and development. In the past few years, computer systems have come to dominate not just our technological growth, but the foundations of our world's major industries. This text seeks to lay out the fundamental concepts of this huge and continually growing subject area in a clear and comprehensive manner.The Tenth Edition contains new information that highlights various technological updates of recent years, providing students with highly relevant and current information. Sommerville's experience in system dependability and systems engineering guides the text through a traditional plan-based approach that incorporates some novel agile methods. The text strives to teach the innovators of tomorrow how to create software that will make our world a better, safer, and more advanced place to live.},
  language = {en},
  publisher = {{Pearson Higher Ed}},
  author = {Sommerville, Ian},
  month = mar,
  year = {2016},
  keywords = {Computers / Software Development \& Engineering / General}
}

@misc{cignoniMeshLabOpenSourceMesh2008,
  title = {{{MeshLab}}: An {{Open}}-{{Source Mesh Processing Tool}}},
  shorttitle = {{{MeshLab}}},
  abstract = {The paper presents MeshLab, an open source, extensible, mesh processing system that has been developed at the Visual Computing Lab of the ISTI-CNR with the helps of tens of students. We will describe the MeshLab architecture, its main features and design objectives discussing what strategies have been used to support its development. Various examples of the practical uses of MeshLab in research and professional frameworks are reported to show the various capabilities of the presented system.},
  language = {eng},
  publisher = {{The Eurographics Association}},
  author = {Cignoni, Paolo and Callieri, Marco and Corsini, Massimiliano and Dellepiane, Matteo and Ganovelli, Fabio and Ranzuglia, Guido},
  year = {2008},
  doi = {10.2312/LocalChapterEvents/ItalChap/ItalianChapConf2008/129-136}
}

@misc{LearnOpenGLShaders,
  title = {{{LearnOpenGL}} - {{Shaders}}},
  howpublished = {https://learnopengl.com/Getting-started/Shaders},
  file = {/home/jose/Zotero/storage/D5PK2XML/Shaders.html}
}

@misc{ShaderOpenGLWiki,
  title = {Shader - {{OpenGL Wiki}}},
  howpublished = {https://www.khronos.org/opengl/wiki/Shader},
  file = {/home/jose/Zotero/storage/6X69XKFP/Shader.html}
}

@misc{VertexShaderOpenGL,
  title = {Vertex {{Shader}} - {{OpenGL Wiki}}},
  howpublished = {https://www.khronos.org/opengl/wiki/Vertex\_Shader},
  file = {/home/jose/Zotero/storage/CWZRR7JL/Vertex_Shader.html}
}

@misc{FragmentShaderOpenGL,
  title = {Fragment {{Shader}} - {{OpenGL Wiki}}},
  howpublished = {https://www.khronos.org/opengl/wiki/Fragment\_Shader},
  file = {/home/jose/Zotero/storage/FMDZSF6C/Fragment_Shader.html}
}

@misc{LearnOpenGLCamera,
  title = {{{LearnOpenGL}} - {{Camera}}},
  howpublished = {https://learnopengl.com/Getting-started/Camera},
  file = {/home/jose/Zotero/storage/WWJW5HPW/Camera.html}
}

@article{EulerAngles2018,
  title = {Euler Angles},
  copyright = {Creative Commons Attribution-ShareAlike License},
  abstract = {The Euler angles are three angles introduced by Leonhard Euler to describe the orientation of a rigid body with respect to a fixed coordinate system. They can also represent the orientation of a mobile frame of reference in physics or the orientation of a general basis in 3-dimensional linear algebra.
Any orientation can be achieved by composing three elemental rotations, i.e. rotations about the axes of a coordinate system. Euler angles can be defined by three of these rotations. They can also be defined by elemental geometry and the geometrical definition demonstrates that three rotations are always sufficient to reach any frame.
The three elemental rotations may be extrinsic (rotations about the axes xyz of the original coordinate system, which is assumed to remain motionless), or intrinsic (rotations about the axes of the rotating coordinate system XYZ, solidary with the moving body, which changes its orientation after each elemental rotation).
Euler angles are typically denoted as $\alpha$, $\beta$, $\gamma$, or $\varphi$, \texttheta, $\psi$. Different authors may use different sets of rotation axes to define Euler angles, or different names for the same angles. Therefore, any discussion employing Euler angles should always be preceded by their definition.
Without considering the possibility of using two different conventions for the definition of the rotation axes (intrinsic or extrinsic), there exist twelve possible sequences of rotation axes, divided in two groups:

Proper Euler angles (z-x-z, x-y-x, y-z-y, z-y-z, x-z-x, y-x-y)
Tait\textendash{}Bryan angles (x-y-z, y-z-x, z-x-y, x-z-y, z-y-x, y-x-z).Tait\textendash{}Bryan angles are also called Cardan angles; nautical angles; heading, elevation, and bank; or yaw, pitch, and roll. Sometimes, both kinds of sequences are called "Euler angles". In that case, the sequences of the first group are called proper or classic Euler angles.},
  language = {en},
  journal = {Wikipedia},
  month = may,
  year = {2018},
  file = {/home/jose/Zotero/storage/IWHEHQXU/index.html},
  note = {Page Version ID: 842226528}
}

@article{AircraftPrincipalAxes2018,
  title = {Aircraft Principal Axes},
  copyright = {Creative Commons Attribution-ShareAlike License},
  abstract = {An aircraft in flight is free to rotate in three dimensions: yaw, nose left or right about an axis running up and down; pitch, nose up or down about an axis running from wing to wing; and roll, rotation about an axis running from nose to tail. The axes are alternatively designated as vertical, transverse, and longitudinal respectively. These axes move with the vehicle and rotate relative to the Earth along with the craft. These definitions were analogously applied to spacecraft when the first manned spacecraft were designed in the late 1950s.
These rotations are produced by torques (or moments) about the principal axes. On an aircraft, these are intentionally produced by means of moving control surfaces, which vary the distribution of the net aerodynamic force about the vehicle's center of mass. Elevators (moving flaps on the horizontal tail) produce pitch, a rudder on the vertical tail produces yaw, and ailerons (flaps on the wings that move in opposing directions) produce roll. On a spacecraft, the moments are usually produced by a reaction control system consisting of small rocket thrusters used to apply asymmetrical thrust on the vehicle.},
  language = {en},
  journal = {Wikipedia},
  month = jul,
  year = {2018},
  file = {/home/jose/Zotero/storage/PN9BDEHZ/index.html},
  note = {Page Version ID: 850349724}
}

@misc{EulerAnglesWolfram,
  title = {Euler {{Angles}} -- from {{Wolfram MathWorld}}},
  howpublished = {http://mathworld.wolfram.com/EulerAngles.html},
  file = {/home/jose/Zotero/storage/IUM4T6EE/EulerAngles.html}
}

@misc{franciscojaviermelerorusGuiaAsignaturaInformatica2016,
  title = {{Gu\'ia de la asignatura Inform\'atica gr\'afica}},
  language = {es},
  author = {, Francisco Javier Melero Rus},
  year = {2016}
}

@article{turkPLYPolygonFormat,
  title = {The {{PLY Polygon Format File}}},
  language = {en},
  journal = {1994},
  author = {Turk, Greg},
  pages = {8},
  file = {/home/jose/Zotero/storage/SN8EX27P/Turk - THE SOFTWARE IS PROVIDED AS IS AND WITHOUT WARRA.pdf}
}

@book{fowlerPatternsEnterpriseApplication2012,
  title = {Patterns of {{Enterprise Application Architecture}}: {{Pattern Enterpr Applica Arch}}},
  isbn = {978-0-13-306521-3},
  shorttitle = {Patterns of {{Enterprise Application Architecture}}},
  abstract = {The practice of enterprise application development has benefited from the emergence of many new enabling technologies. Multi-tiered object-oriented platforms, such as Java and .NET, have become commonplace. These new tools and technologies are capable of building powerful applications, but they are not easily implemented. Common failures in enterprise applications often occur because their developers do not understand the architectural lessons that experienced object developers have learned.     Patterns of Enterprise Application Architecture  is written in direct response to the stiff challenges that face enterprise application developers. The author, noted object-oriented designer Martin Fowler, noticed that despite changes in technology--from Smalltalk to CORBA to Java to .NET--the same basic design ideas can be adapted and applied to solve common problems. With the help of an expert group of contributors, Martin distills over forty recurring solutions into patterns. The result is an indispensable handbook of solutions that are applicable to any enterprise application platform.    This book is actually two books in one. The first section is a short tutorial on developing enterprise applications, which you can read from start to finish to understand the scope of the book's lessons. The next section, the bulk of the book, is a detailed reference to the patterns themselves. Each pattern provides usage and implementation information, as well as detailed code examples in Java or C\#. The entire book is also richly illustrated with UML diagrams to further explain the concepts.  Armed with this book, you will have the knowledge necessary to make important architectural decisions about building an enterprise application and the proven patterns for use when building them.    The topics covered include  $\cdot$ Dividing an enterprise application into layers  $\cdot$ The major approaches to organizing business logic  $\cdot$ An in-depth treatment of mapping between objects and relational databases  $\cdot$ Using Model-View-Controller to organize a Web presentation  $\cdot$ Handling concurrency for data that spans multiple transactions  $\cdot$ Designing distributed object interfaces},
  language = {en},
  publisher = {{Addison-Wesley}},
  author = {Fowler, Martin},
  month = mar,
  year = {2012},
  keywords = {Computers / Programming / Object Oriented}
}

@misc{OpenMeshBasicOperations,
  title = {{{OpenMesh}}: {{Some}} Basic Operations: {{Flipping}} and Collapsing Edges},
  howpublished = {https://www.openmesh.org/media/Documentations/OpenMesh-7.0-Documentation/a03935.html},
  file = {/home/jose/Zotero/storage/9ZRHFSVK/a03935.html}
}

@misc{CS468GeometryProcessing,
  title = {{{CS468}}: {{Geometry Processing Algorithms Home Page}}},
  howpublished = {http://graphics.stanford.edu/courses/cs468-12-spring/},
  file = {/home/jose/Zotero/storage/PN3QDRDP/cs468-12-spring.html}
}

@misc{GeometryProcessingCourse,
  title = {Geometry {{Processing Course}}},
  howpublished = {https://www.cs.toronto.edu/\textasciitilde{}jacobson/geometry-processing/},
  file = {/home/jose/Zotero/storage/ZZACVCP4/geometry-processing.html}
}

@book{meleroInteractive3DReconstruction2003,
  title = {On the {{Interactive 3D Reconstruction}} of {{Iberian Vessels}}},
  isbn = {978-3-905673-08-1},
  abstract = {Reconstructing vessels from sherds is a complex task, specially for hand made pottery. That is the case of the Iberian vessels. The reconstruction process can be done in three steps: orientation of the sherd, computing the symmetry axis and detecting the profile. This paper presents methods to accomplish these three tasks in a semi-automatic way. This algorithm has been implemented within a reconstruction application that has been successfully used to reconstruct Iberian pottery.},
  language = {en},
  publisher = {{The Eurographics Association}},
  author = {Melero, F. J. and Torres, J. C. and Le\'on, A.},
  year = {2003},
  file = {/home/jose/Zotero/storage/5TE2NQ79/VAST.VAST03.html},
  doi = {http://dx.doi.org/10.2312/VAST/VAST03/071-078}
}

@misc{OpenMeshMeshDecimation,
  title = {{{OpenMesh}}: {{Mesh Decimation Framework}}},
  howpublished = {https://www.openmesh.org/media/Documentations/OpenMesh-7.0-Documentation/a03920.html},
  file = {/home/jose/Zotero/storage/EDSLD59V/a03920.html}
}

@misc{FrequentMeshProblems,
  title = {Frequent {{Mesh Problems}}},
  howpublished = {http://www.cs.princeton.edu/courses/archive/spr98/cs598d/lectures/alejo/},
  file = {/home/jose/Zotero/storage/WX5IXQB7/alejo.html}
}

@misc{2manifoldsManifoldAtlas,
  title = {2-Manifolds - {{Manifold Atlas}}},
  howpublished = {http://www.map.mpim-bonn.mpg.de/2-manifolds},
  file = {/home/jose/Zotero/storage/BNMB4JVD/2-manifolds.html}
}

@misc{OpenMeshCompilingOpenMesh,
  title = {{{OpenMesh}}: {{Compiling OpenMesh}}},
  howpublished = {https://www.openmesh.org/media/Documentations/OpenMesh-7.0-Documentation/a03933.html},
  file = {/home/jose/Zotero/storage/XVIHJQVF/a03933.html}
}

@misc{marttimantylaIntroductionSolidModeling,
  title = {An Introduction to Solid Modeling},
  howpublished = {https://dl.acm.org/citation.cfm?id=39278},
  author = {Martti M\"antyl\"a}
}

@misc{QLinkedListClassQt,
  title = {{{QLinkedList Class}} | {{Qt Core}} 5.10},
  howpublished = {http://doc.qt.io/archives/qt-5.10/qlinkedlist.html},
  file = {/home/jose/Zotero/storage/UU76YMNH/qlinkedlist.html}
}


